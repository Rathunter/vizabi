---
control_buttons: { play: true, languages: ["en", "se"], record: true }
control_state: true
control_sizes: true
control_buttons: {play: true, language: true, record: true }
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">

    {{#if redirect}}
      <meta http-equiv="refresh" content="0; url={{redirect}}.html" />
    {{/if}}

    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />

    <title>Vizabi - {{ title }}</title>
    <link rel="shortcut icon" href="data:image/x-icon;," type="image/x-icon">
    {{!-- Styles --}}
    <link rel="stylesheet" href="{{assets}}css/font-awesome.min.css">
    <link rel="stylesheet" href="{{assets}}css/main.css">
    <link rel="stylesheet" href="dist/vizabi.css">
  </head>
  <body class="vzbp-fullscreen">

    <div id="vzbp-main">
      <div id="vzbp-placeholder" class="vzbp-viewer"></div>
    </div>


    <script src="{{assets}}js/d3.min.js"></script>
    <script src="dist/vizabi.min.js"></script>

    {{#if tool}}
      <script>

      //div is resizable
      var placeholder = document.getElementById('vzbp-placeholder');
      var container = document.getElementById('vzbp-main');
      var viz;

        var TITLE = "{{title}}";
        var TOOL = "{{tool}}";
        var DESCRIPTION = "{{description}}";

        VIZABI_OPTIONS = {
          state: {},
          ui: {
            buttons: {{{chart_buttons}}}
          }
        };

        if(!VIZABI_OPTIONS) {
          VIZABI_OPTIONS = { state: {}}; //fallback
        }
        VIZABI_OPTIONS.language = {};
        if(URL.state) VIZABI_OPTIONS.state = URL.state;
        if(URL.lang) VIZABI_OPTIONS.language.id = URL.lang;

        VIZ = Vizabi("{{tool}}", placeholder, VIZABI_OPTIONS);

      </script>
    {{/if}}

    <script>
      //menu
      var nw = require('nw.gui');

      // Window menu
      var windowMenu = new nw.Menu({
          type: 'menubar'
      });

      var ChartMenu = new nw.Menu();
      var GapminderMenu = new nw.Menu();

      // Add to window menu
      windowMenu.append(new nw.MenuItem({
          type: 'normal',
          label: 'Gapminder',
          submenu: ChartMenu
      }));
      windowMenu.append(new nw.MenuItem({
          type: 'normal',
          label: 'About',
          submenu: GapminderMenu
      }));

      ChartMenu.append(new nw.MenuItem({
          label: 'Bubble Chart',
          click: function(){
              nw.Window.get(window.open('bubblechart.html'));
          }
      }));

      ChartMenu.append(new nw.MenuItem({
          label: 'Mountain Chart',
          click: function(){
              nw.Window.get(window.open('mountainchart.html'));
          }
      }));

      GapminderMenu.append(new nw.MenuItem({
          label: 'Software',
          click: function(){
              alert('This is an offline alpha version of Gapminder Vizabi. Version number 0.7.0. Please report errors on http://github.com/Gapminder/vizabi/issues');
          }
      }));

      GapminderMenu.append(new nw.MenuItem({
          label: 'Website',
          click: function(){
              nw.Window.get(window.open('http://www.gapminder.org', 'Gapminder Website', 'width=1280,height=768,scrollbars=yes'))
          }
      }));

      // Assign to window
      nw.Window.get().menu = windowMenu;

    </script>

  </body>
</html>
